from gensim import corpora, models
from gensim.models import LsiModel
from gensim.models.coherencemodel import CoherenceModel

# Assuming 'corpus' is a list of preprocessed email texts
dictionary = corpora.Dictionary(corpus)
corpus_bow = [dictionary.doc2bow(doc) for doc in corpus]

# LSA model
lsa_model = LsiModel(corpus_bow, id2word=dictionary, num_topics=5)

# Print topics
topics = lsa_model.print_topics()
for topic in topics:
    print(topic)





from gensim import corpora, models
from gensim.models import HdpModel

# Assuming 'corpus' is a list of preprocessed email texts
dictionary = corpora.Dictionary(corpus)
corpus_bow = [dictionary.doc2bow(doc) for doc in corpus]

# HDP model
hdp_model = HdpModel(corpus_bow, id2word=dictionary)

# Print topics
topics = hdp_model.print_topics()
for topic in topics:
    print(topic)






from gensim import corpora, models
from lda2vec import Lda2Vec

# Assuming 'corpus' is a list of preprocessed email texts
document_lengths = [len(doc) for doc in corpus]

# Create a corpus in the required format
corpus = [(i, doc) for i, doc in enumerate(corpus)]

# Initialize the model
model = Lda2Vec(corpus, num_topics=5, n_words=100)

# Fit the model
model.fit(corpus, document_lengths)

# Get topic vectors
topic_vectors = model.doc_topic_

# Print topic vectors for documents
for i, vector in enumerate(topic_vectors):
    print(f"Document {i}: {vector}")





