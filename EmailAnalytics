from gensim.models.ldamodel import LdaModel
from gensim.models.coherencemodel import CoherenceModel

# Assuming you already have trained an LDA model and have access to it as 'lda_model'
# Example of LDA training: lda_model = LdaModel(corpus, num_topics=10, id2word=dictionary)

# Create a list to store coherence values for each topic
coherence_values = []

# Iterate through topics and calculate coherence for each
for topic_id in range(lda_model.num_topics):
    # Get the terms associated with the topic
    topic_terms = lda_model.get_topic_terms(topic_id)
    
    # Convert the topic's term distribution into a list of term IDs
    term_ids = [term_id for term_id, _ in topic_terms]
    
    # Convert term IDs to term words using the model's id2word dictionary
    topic_terms_list = [lda_model.id2word[term_id] for term_id in term_ids]
    
    # Create a CoherenceModel for the topic using the terms
    coherence_model = CoherenceModel(
        topics=[topic_terms_list],
        texts=texts,  # Replace 'texts' with your document-term matrix or text data
        dictionary=dictionary,  # Replace 'dictionary' with your dictionary
        coherence='c_v'  # You can use different coherence measures like 'u_mass', 'c_uci', etc.
    )
    
    # Get the coherence value for the topic and append to the list
    coherence_value = coherence_model.get_coherence()
    coherence_values.append(coherence_value)

# Now, 'coherence_values' contains coherence values for each topic
