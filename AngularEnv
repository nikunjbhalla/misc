import streamlit as st
from authlib.integrations.base_client import OAuth
from authlib.integrations.requests_client import OAuth2Session
from authlib.integrations.starlette_client import StarletteRemoteApp
from fastapi import FastAPI, Request
from starlette.middleware.sessions import SessionMiddleware

# OIDC parameters
client_id = 'YOUR_CLIENT_ID'
client_secret = 'YOUR_CLIENT_SECRET'
authorization_endpoint = 'OIDC_AUTHORIZATION_ENDPOINT'
token_endpoint = 'OIDC_TOKEN_ENDPOINT'
redirect_uri = 'YOUR_REDIRECT_URI'
scope = 'openid profile email'

# Create a FastAPI app for handling redirects
app = FastAPI()

# Use SessionMiddleware for session management
app.add_middleware(SessionMiddleware, secret_key="your-secret-key")

# Create an OAuth2Session
oauth = OAuth2Session(client_id, client_secret, scope=scope)

@app.get("/")
def index():
    if 'token' not in st.session:
        st.write("Please log in to continue.")
        authorization_url, _ = oauth.create_authorization_url(authorization_endpoint)
        st.write(f"[Login]({authorization_url})")
    else:
        st.write("You are logged in.")
        # You can display user information here.

@app.get("/callback")
def callback(request: Request):
    # Handle the callback from the OIDC provider
    token = oauth.fetch_access_token(token_endpoint)
    st.session['token'] = token

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="localhost", port=8000)
